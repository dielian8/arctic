#python-config file for setup the GF database
#
#
#
#
#continuous
#
#
#
#
#----------------------------------------------
[general]


#for human readers
model_name          = rotenburg_layered

#veeeeeeeeeeery important
author              = dussel_duck

#flag for output xml
volcano_id          = rot_cont

#flag for output xml
project_id          = cont_test

#----------------------------------------------

[setup_gf]

#given (QSEIS) distance step in metres
gf_in_dist_step     = 500

#sampling rate of GFs in Hz
gf_sampling_rate    = 2.

#length of GF traces in seconds
window_length_in_s  = 360.

#for human readers
gf_version          = 8

#choose input format - only ascii available
#TODO: andere formate 2=ascii
gf_format_key       = 2

#include near filed or not
number_of_gf        = 10

#----------------------------------------------

[gf_chunks]

#flag, if GFs are organised in chunks (KINHERD)
gf_db_chunks_flag      = 1 

#folder name of chunk directory
gf_db_chunks_modelname = gfdb

#name of the chunks' database
gf_db_chunks_db_name   = db


#----------------------------------------------
[source-grid]

#centre point coordinates - latitude in decimal degrees
central_latitude    = 53.01

#centre point coordinates - longitude in decimal degrees
central_longitude   =  9.63

#extension in north direction from centre - in number of points
northdim            =  5

#extension in east direction from centre - in number of points
eastdim             =  5

#number of horiz. layers - in number of points - minuminum = 1
depthdim            =  3

#distance between gridpoints in north direction in metres
northstep           =  10000

#distance between gridpoints in east direction in metres
eaststep            =  10000

#distance between gridpoints in down direction in metres
depthstep           =  2000

#depth of uppermost grid layer
min_depth           =  2000

#flag, if sources array is given as file 
# TODO - read in this file !!!
sourcelist_key      = 1


#----------------------------------------------
[receiver]

#receivers can be set up artificially or by reading in a file with stations' names and coordinates
#flag, if using existing geometrical setup (file with coordinates needed)
use_station_file    = 1

#flag, if using all receivers or just members of a list
#0 - no list, 1 - try to read fixed list, 2 - random choice 
#reclist_key         = 1

#minimum index of receiver, if using list 
rec_min             = 15

#maximum index of receiver, if using list 
rec_max             = 20

#number of stations, if using random choice
n_rdm_rec           = 4

#list of station names to use, comment, if not wanted
#list_of_all_stations    = AAA,     BBB,CCC, DDD,eee

#list of channels - mandatory!
list_of_all_channels  = BHN, bHZ, BHE

#only important, if several are present
network_names        =  RG

#only important, if several are present
location_names      =

#farthest distance allowed  (station from centre of source grid - in metres)
farthest_distance_m = 2000000

#nearest distance allowed  (station from centre of source grid - in metres)
nearest_distance_m  = 50


#----------------------------------------------
[artificial_receivers]

#for artificial setup of stations/receivers

#number of stations
n_stations             = 29

#nearest distance allowed  (station from centre of source grid - in metres)
stat_dist_min          = 4000

#radial distance step between stations - in metres 
stat_radial_dist_step  = 5000


#----------------------------------------------
[setup_data]

#building synthetic data

#flag, if taking only part of stations
partial_rec      = 0

#minimal index of used stations
rec_min          = 11

#maximal index of used stations
rec_max          = 20

#flag, if directly genarate lp-data
lp_flag          = 0

#fraction of added white noise
#1 = 100% of maximal amplitude of signal 
noiselevel       = 0.

#index of artificial source - index starts at 1 
source_index      = 122

#alternatively give source depth directly (in metres)
#source_depth       = 3000

#flag, if something changed (look for old files to read from, if not)
changed_data_setup  = 1

#distinguish different sets of synthetic data 
data_version        = 6

#format of data 
#only ascii (0) and mseed (1) supported at the moment
data_format_key     = 1

#flag if change of length of data trace ( 0 or 1 ) -- default length = 1 day
reduce_synth_data_length  =  1

# set appropriate length in seconds
data_trace_length     =  20

#----------------------------------------------
[event]

#give unique ID to (artificial) event by ISO conform time stamp 
event_ID        = 2006-10-08T11:45:08.0

#for statistics
#lp event = 2
event_type      = 3


#----------------------------------------------
[directories]

#base path - will be parent directory for all actions - set as first action if not existing
base_dir            = /net/scratch2/gp/u25400/lasse/continuous_inversion

#where to put final synthetic data - w.r.t. 'base_path'
data_dir            = DB/dummy_data

#reference path for Greens functions folder structure
gf_db_base_dir      =  /net/gutenberg/scratch/local3/GF/Rotenburgmarius/Rotenburg06b

#where to search for GF w.r.t. 'gf_db_base_dir' 
gf_dir_input        = .


#----------------------------------------------
[files]

#name for source grid coordinate file - put to 'base_path'
source_coords_file     = setup/grid_coordinates_rotenburg_x10000m11x11_z2000m3x.dat

#name for stations coordinates file - location w.r.t. 'base_path'
station_coords_file    = setup/conf_file_suited_dist400kmstations.dat.rapid



#todo: structurise these
stationinformationfiles = 0.
topography_model_files  = 0.
velocity_model_files    = 0.
